{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0425\\u0418\\u041C\\u0411\\u041E\\u0422\\\\reactbot\\\\src\\\\components\\\\admin\\\\adminContaier.js\";\nimport React from \"react\";\nimport { addNewsCreator, updateNewsCreator } from \"../../redux/news_reducer\";\nimport AdminNews from \"./adminNews\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminNewsContainer = () => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let state = store.getState();\n\n      const addNews = () => {\n        store.dispatch(addNewsCreator());\n      };\n\n      const postChange = (newsHeader, newsText) => {\n        store.dispatch(updateNewsCreator(newsHeader, newsText));\n      };\n\n      return /*#__PURE__*/_jsxDEV(AdminNews, {\n        updateNews: postChange,\n        addNews: addNews,\n        news: state.contain.advertising\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AdminNewsContainer;\n\nlet mapStateToProps = state => {\n  return {\n    news: state.contain.advertising\n  };\n};\n\nlet mapDispatchToProps = () => {\n  return {\n    updateNews: () => {\n      dispatch(addNewsCreator());\n    },\n    addNews: (newsHeader, newsText) => {\n      dispatch(updateNewsCreator(newsHeader, newsText));\n    }\n  };\n};\n\nconst SuperAdminContainer = connect(mapStateToProps, mapDispatchToProps)(AdminNews);\nexport default AdminNewsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminNewsContainer\");","map":{"version":3,"sources":["D:/ХИМБОТ/reactbot/src/components/admin/adminContaier.js"],"names":["React","addNewsCreator","updateNewsCreator","AdminNews","connect","AdminNewsContainer","store","state","getState","addNews","dispatch","postChange","newsHeader","newsText","contain","advertising","mapStateToProps","news","mapDispatchToProps","updateNews","SuperAdminContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,0BAAlD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,sBACE,QAAC,YAAD,CAAc,QAAd;AAAA,cACIC,KAAD,IAAW;AACV,UAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,EAAZ;;AAEA,YAAMC,OAAO,GAAG,MAAM;AACpBH,QAAAA,KAAK,CAACI,QAAN,CAAeT,cAAc,EAA7B;AACD,OAFD;;AAIA,YAAMU,UAAU,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAC3CP,QAAAA,KAAK,CAACI,QAAN,CAAeR,iBAAiB,CAACU,UAAD,EAAaC,QAAb,CAAhC;AACD,OAFD;;AAGA,0BACE,QAAC,SAAD;AACE,QAAA,UAAU,EAAEF,UADd;AAEE,QAAA,OAAO,EAAEF,OAFX;AAGE,QAAA,IAAI,EAAEF,KAAK,CAACO,OAAN,CAAcC;AAHtB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;AAlBH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAvBD;;KAAMV,kB;;AAyBN,IAAIW,eAAe,GAAIT,KAAD,IAAW;AAC/B,SAAO;AACLU,IAAAA,IAAI,EAAEV,KAAK,CAACO,OAAN,CAAcC;AADf,GAAP;AAGD,CAJD;;AAKA,IAAIG,kBAAkB,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,UAAU,EAAE,MAAM;AAChBT,MAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACD,KAHI;AAILQ,IAAAA,OAAO,EAAE,CAACG,UAAD,EAAaC,QAAb,KAA0B;AACjCH,MAAAA,QAAQ,CAACR,iBAAiB,CAACU,UAAD,EAAaC,QAAb,CAAlB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,MAAMO,mBAAmB,GAAGhB,OAAO,CACjCY,eADiC,EAEjCE,kBAFiC,CAAP,CAG1Bf,SAH0B,CAA5B;AAKA,eAAeE,kBAAf","sourcesContent":["import React from \"react\";\r\nimport { addNewsCreator, updateNewsCreator } from \"../../redux/news_reducer\";\r\nimport AdminNews from \"./adminNews\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AdminNewsContainer = () => {\r\n  return (\r\n    <StoreContext.Consumer>\r\n      {(store) => {\r\n        let state = store.getState();\r\n\r\n        const addNews = () => {\r\n          store.dispatch(addNewsCreator());\r\n        };\r\n\r\n        const postChange = (newsHeader, newsText) => {\r\n          store.dispatch(updateNewsCreator(newsHeader, newsText));\r\n        };\r\n        return (\r\n          <AdminNews\r\n            updateNews={postChange}\r\n            addNews={addNews}\r\n            news={state.contain.advertising}\r\n          ></AdminNews>\r\n        );\r\n      }}\r\n    </StoreContext.Consumer>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    news: state.contain.advertising,\r\n  };\r\n};\r\nlet mapDispatchToProps = () => {\r\n  return {\r\n    updateNews: () => {\r\n      dispatch(addNewsCreator());\r\n    },\r\n    addNews: (newsHeader, newsText) => {\r\n      dispatch(updateNewsCreator(newsHeader, newsText));\r\n    },\r\n  };\r\n};\r\n\r\nconst SuperAdminContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AdminNews);\r\n\r\nexport default AdminNewsContainer;\r\n"]},"metadata":{},"sourceType":"module"}