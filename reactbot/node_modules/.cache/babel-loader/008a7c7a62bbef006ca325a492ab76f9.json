{"ast":null,"code":"import { rerenderTree } from \"./rerenderTree\";\nlet state = {\n  contain: {\n    advertising: {\n      news: [{\n        header: \"bad news for gay\",\n        text: \"your ass in shit\"\n      }, {\n        header: \"bad news for gay\",\n        text: \"your ass in shit\"\n      }, {\n        header: \"bad news for gay\",\n        text: \"your ass in shit\"\n      }],\n      newsChangeHead: \"Введите название новости\"\n    }\n  }\n};\nexport let addNews = (headerNews, textNews) => {\n  let newNews = {\n    header: headerNews,\n    text: textNews\n  };\n  state.contain.advertising.news.unshift(newNews);\n  rerenderTree(state);\n};\nexport default state;","map":{"version":3,"sources":["D:/ХИМБОТ/reactbot/src/state.js"],"names":["rerenderTree","state","contain","advertising","news","header","text","newsChangeHead","addNews","headerNews","textNews","newNews","unshift"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE;AACXC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,MAAM,EAAE,kBADV;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADI,EAKJ;AACED,QAAAA,MAAM,EAAE,kBADV;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALI,EASJ;AACED,QAAAA,MAAM,EAAE,kBADV;AAEEC,QAAAA,IAAI,EAAE;AAFR,OATI,CADK;AAeXC,MAAAA,cAAc,EAAE;AAfL;AADN;AADC,CAAZ;AAsBA,OAAO,IAAIC,OAAO,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAC7C,MAAIC,OAAO,GAAG;AACZN,IAAAA,MAAM,EAAEI,UADI;AAEZH,IAAAA,IAAI,EAAEI;AAFM,GAAd;AAIAT,EAAAA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BC,IAA1B,CAA+BQ,OAA/B,CAAuCD,OAAvC;AACAX,EAAAA,YAAY,CAACC,KAAD,CAAZ;AACD,CAPM;AASP,eAAeA,KAAf","sourcesContent":["import { rerenderTree } from \"./rerenderTree\";\r\n\r\nlet state = {\r\n  contain: {\r\n    advertising: {\r\n      news: [\r\n        {\r\n          header: \"bad news for gay\",\r\n          text: \"your ass in shit\",\r\n        },\r\n        {\r\n          header: \"bad news for gay\",\r\n          text: \"your ass in shit\",\r\n        },\r\n        {\r\n          header: \"bad news for gay\",\r\n          text: \"your ass in shit\",\r\n        },\r\n      ],\r\n      newsChangeHead: \"Введите название новости\",\r\n    },\r\n  },\r\n};\r\n\r\nexport let addNews = (headerNews, textNews) => {\r\n  let newNews = {\r\n    header: headerNews,\r\n    text: textNews,\r\n  };\r\n  state.contain.advertising.news.unshift(newNews);\r\n  rerenderTree(state);\r\n};\r\n\r\nexport default state;\r\n"]},"metadata":{},"sourceType":"module"}