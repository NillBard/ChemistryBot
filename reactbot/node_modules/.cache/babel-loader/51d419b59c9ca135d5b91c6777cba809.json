{"ast":null,"code":"import newsReducer from \"./news_reducer\";\nlet store = {\n  _state: {\n    contain: {\n      advertising: {\n        news: [{\n          id: 3,\n          header: \"bad news for gay\",\n          text: \"your ass in shit\"\n        }, {\n          id: 2,\n          header: \"bad news for gay\",\n          text: \"your ass in shit\"\n        }, {\n          id: 1,\n          header: \"bad news for gay\",\n          text: \"your ass in shit\"\n        }],\n        newsChangeHead: \"Введите название новости\",\n        newsChangeText: \"Введите текст новости\"\n      }\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._rerenderTree = observer;\n  },\n\n  _rerenderTree() {\n    console.log(\"state update\");\n  },\n\n  addNews() {\n    let newNews = {\n      header: this._state.contain.advertising.newsChangeHead,\n      text: this._state.contain.advertising.newsChangeText\n    };\n\n    this._state.contain.advertising.news.unshift(newNews);\n\n    store.updateNews(\"\", \"\");\n\n    this._rerenderTree(this._state);\n  },\n\n  dispatch(action) {\n    this._state.contain.advertising = newsReducer(this._state.contain.advertising, action);\n\n    this._rerenderTree(this._state);\n  }\n\n};\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["D:/ХИМБОТ/reactbot/src/redux/state.js"],"names":["newsReducer","store","_state","contain","advertising","news","id","header","text","newsChangeHead","newsChangeText","getState","subscribe","observer","_rerenderTree","console","log","addNews","newNews","unshift","updateNews","dispatch","action","window"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE;AACXC,QAAAA,IAAI,EAAE,CACJ;AACEC,UAAAA,EAAE,EAAE,CADN;AAEEC,UAAAA,MAAM,EAAE,kBAFV;AAGEC,UAAAA,IAAI,EAAE;AAHR,SADI,EAMJ;AACEF,UAAAA,EAAE,EAAE,CADN;AAEEC,UAAAA,MAAM,EAAE,kBAFV;AAGEC,UAAAA,IAAI,EAAE;AAHR,SANI,EAWJ;AACEF,UAAAA,EAAE,EAAE,CADN;AAEEC,UAAAA,MAAM,EAAE,kBAFV;AAGEC,UAAAA,IAAI,EAAE;AAHR,SAXI,CADK;AAkBXC,QAAAA,cAAc,EAAE,0BAlBL;AAmBXC,QAAAA,cAAc,EAAE;AAnBL;AADN;AADH,GADE;;AA0BVC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKT,MAAZ;AACD,GA5BS;;AA6BVU,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,SAAKC,aAAL,GAAqBD,QAArB;AACD,GA/BS;;AAgCVC,EAAAA,aAAa,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GAlCS;;AAmCVC,EAAAA,OAAO,GAAG;AACR,QAAIC,OAAO,GAAG;AACZX,MAAAA,MAAM,EAAE,KAAKL,MAAL,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCK,cAD5B;AAEZD,MAAAA,IAAI,EAAE,KAAKN,MAAL,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCM;AAF1B,KAAd;;AAIA,SAAKR,MAAL,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCC,IAAhC,CAAqCc,OAArC,CAA6CD,OAA7C;;AACAjB,IAAAA,KAAK,CAACmB,UAAN,CAAiB,EAAjB,EAAqB,EAArB;;AACA,SAAKN,aAAL,CAAmB,KAAKZ,MAAxB;AACD,GA3CS;;AA6CVmB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACf,SAAKpB,MAAL,CAAYC,OAAZ,CAAoBC,WAApB,GAAkCJ,WAAW,CAC3C,KAAKE,MAAL,CAAYC,OAAZ,CAAoBC,WADuB,EAE3CkB,MAF2C,CAA7C;;AAKA,SAAKR,aAAL,CAAmB,KAAKZ,MAAxB;AACD;;AApDS,CAAZ;AAuDAqB,MAAM,CAACtB,KAAP,GAAeA,KAAf;AACA,eAAeA,KAAf","sourcesContent":["import newsReducer from \"./news_reducer\";\r\n\r\nlet store = {\r\n  _state: {\r\n    contain: {\r\n      advertising: {\r\n        news: [\r\n          {\r\n            id: 3,\r\n            header: \"bad news for gay\",\r\n            text: \"your ass in shit\",\r\n          },\r\n          {\r\n            id: 2,\r\n            header: \"bad news for gay\",\r\n            text: \"your ass in shit\",\r\n          },\r\n          {\r\n            id: 1,\r\n            header: \"bad news for gay\",\r\n            text: \"your ass in shit\",\r\n          },\r\n        ],\r\n        newsChangeHead: \"Введите название новости\",\r\n        newsChangeText: \"Введите текст новости\",\r\n      },\r\n    },\r\n  },\r\n  getState() {\r\n    return this._state;\r\n  },\r\n  subscribe(observer) {\r\n    this._rerenderTree = observer;\r\n  },\r\n  _rerenderTree() {\r\n    console.log(\"state update\");\r\n  },\r\n  addNews() {\r\n    let newNews = {\r\n      header: this._state.contain.advertising.newsChangeHead,\r\n      text: this._state.contain.advertising.newsChangeText,\r\n    };\r\n    this._state.contain.advertising.news.unshift(newNews);\r\n    store.updateNews(\"\", \"\");\r\n    this._rerenderTree(this._state);\r\n  },\r\n\r\n  dispatch(action) {\r\n    this._state.contain.advertising = newsReducer(\r\n      this._state.contain.advertising,\r\n      action\r\n    );\r\n\r\n    this._rerenderTree(this._state);\r\n  },\r\n};\r\n\r\nwindow.store = store;\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}