{"ast":null,"code":"import { rerenderTree } from \"./rerenderTree\";\nlet state = {\n  contain: {\n    advertising: {\n      news: [{\n        header: \"bad news for gay\",\n        text: \"your ass in shit\"\n      }, {\n        header: \"bad news for gay\",\n        text: \"your ass in shit\"\n      }, {\n        header: \"bad news for gay\",\n        text: \"your ass in shit\"\n      }],\n      newsChangeHead: \"Введите название новости\",\n      newsChangeText: \"Введите текст новости\"\n    }\n  }\n};\nexport let addNews = () => {\n  let newNews = {\n    header: state.contain.advertising.newsChangeHead,\n    text: state.contain.advertising.newsChangeText\n  };\n  state.contain.advertising.news.unshift(newNews);\n  rerenderTree(state);\n};\nexport let updateNews = (newHeaderNews, newTextNews) => {\n  state.contain.advertising.newsChangeHead = newHeaderNews;\n  state.contain.advertising.newsChangeText = newTextNews;\n  rerenderTree(state);\n};\nexport default state;","map":{"version":3,"sources":["D:/ХИМБОТ/reactbot/src/state.js"],"names":["rerenderTree","state","contain","advertising","news","header","text","newsChangeHead","newsChangeText","addNews","newNews","unshift","updateNews","newHeaderNews","newTextNews"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE;AACXC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,MAAM,EAAE,kBADV;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADI,EAKJ;AACED,QAAAA,MAAM,EAAE,kBADV;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALI,EASJ;AACED,QAAAA,MAAM,EAAE,kBADV;AAEEC,QAAAA,IAAI,EAAE;AAFR,OATI,CADK;AAeXC,MAAAA,cAAc,EAAE,0BAfL;AAgBXC,MAAAA,cAAc,EAAE;AAhBL;AADN;AADC,CAAZ;AAuBA,OAAO,IAAIC,OAAO,GAAG,MAAM;AACzB,MAAIC,OAAO,GAAG;AACZL,IAAAA,MAAM,EAAEJ,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BI,cADtB;AAEZD,IAAAA,IAAI,EAAEL,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BK;AAFpB,GAAd;AAIAP,EAAAA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BC,IAA1B,CAA+BO,OAA/B,CAAuCD,OAAvC;AACAV,EAAAA,YAAY,CAACC,KAAD,CAAZ;AACD,CAPM;AASP,OAAO,IAAIW,UAAU,GAAG,CAACC,aAAD,EAAgBC,WAAhB,KAAgC;AACtDb,EAAAA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BI,cAA1B,GAA2CM,aAA3C;AACAZ,EAAAA,KAAK,CAACC,OAAN,CAAcC,WAAd,CAA0BK,cAA1B,GAA2CM,WAA3C;AACAd,EAAAA,YAAY,CAACC,KAAD,CAAZ;AACD,CAJM;AAMP,eAAeA,KAAf","sourcesContent":["import { rerenderTree } from \"./rerenderTree\";\r\n\r\nlet state = {\r\n  contain: {\r\n    advertising: {\r\n      news: [\r\n        {\r\n          header: \"bad news for gay\",\r\n          text: \"your ass in shit\",\r\n        },\r\n        {\r\n          header: \"bad news for gay\",\r\n          text: \"your ass in shit\",\r\n        },\r\n        {\r\n          header: \"bad news for gay\",\r\n          text: \"your ass in shit\",\r\n        },\r\n      ],\r\n      newsChangeHead: \"Введите название новости\",\r\n      newsChangeText: \"Введите текст новости\",\r\n    },\r\n  },\r\n};\r\n\r\nexport let addNews = () => {\r\n  let newNews = {\r\n    header: state.contain.advertising.newsChangeHead,\r\n    text: state.contain.advertising.newsChangeText,\r\n  };\r\n  state.contain.advertising.news.unshift(newNews);\r\n  rerenderTree(state);\r\n};\r\n\r\nexport let updateNews = (newHeaderNews, newTextNews) => {\r\n  state.contain.advertising.newsChangeHead = newHeaderNews;\r\n  state.contain.advertising.newsChangeText = newTextNews;\r\n  rerenderTree(state);\r\n};\r\n\r\nexport default state;\r\n"]},"metadata":{},"sourceType":"module"}