{"ast":null,"code":"let store = {\n  _state: {\n    contain: {\n      advertising: {\n        news: [{\n          header: \"bad news for gay\",\n          text: \"your ass in shit\"\n        }, {\n          header: \"bad news for gay\",\n          text: \"your ass in shit\"\n        }, {\n          header: \"bad news for gay\",\n          text: \"your ass in shit\"\n        }],\n        newsChangeHead: \"Введите название новости\",\n        newsChangeText: \"Введите текст новости\"\n      }\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _rerenderTree() {\n    console.log(\"state update\");\n  },\n\n  addNews() {\n    let newNews = {\n      header: this._state.ctain.advertising.newsChangeHead,\n      text: this._state.contain.advertising.newsChangeText\n    };\n\n    this._state.contain.advertising.news.unshift(newNews);\n\n    updateNews(\"\", \"\");\n    this.rerenderTree(this._state);\n  },\n\n  updateNews(newHeaderNews, newTextNews) {\n    this._state.contain.advertising.newsChangeHead = newHeaderNews;\n    this._state.contain.advertising.newsChangeText = newTextNews;\n\n    this._rerenderTree(this._state);\n  },\n\n  subscribe(observer) {\n    this._rerenderTree = observer;\n  }\n\n};\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["D:/ХИМБОТ/reactbot/src/state.js"],"names":["store","_state","contain","advertising","news","header","text","newsChangeHead","newsChangeText","getState","_rerenderTree","console","log","addNews","newNews","ctain","unshift","updateNews","rerenderTree","newHeaderNews","newTextNews","subscribe","observer","window"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE;AACXC,QAAAA,IAAI,EAAE,CACJ;AACEC,UAAAA,MAAM,EAAE,kBADV;AAEEC,UAAAA,IAAI,EAAE;AAFR,SADI,EAKJ;AACED,UAAAA,MAAM,EAAE,kBADV;AAEEC,UAAAA,IAAI,EAAE;AAFR,SALI,EASJ;AACED,UAAAA,MAAM,EAAE,kBADV;AAEEC,UAAAA,IAAI,EAAE;AAFR,SATI,CADK;AAeXC,QAAAA,cAAc,EAAE,0BAfL;AAgBXC,QAAAA,cAAc,EAAE;AAhBL;AADN;AADH,GADE;;AAuBVC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKR,MAAZ;AACD,GAzBS;;AA0BVS,EAAAA,aAAa,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GA5BS;;AA6BVC,EAAAA,OAAO,GAAG;AACR,QAAIC,OAAO,GAAG;AACZT,MAAAA,MAAM,EAAE,KAAKJ,MAAL,CAAYc,KAAZ,CAAkBZ,WAAlB,CAA8BI,cAD1B;AAEZD,MAAAA,IAAI,EAAE,KAAKL,MAAL,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCK;AAF1B,KAAd;;AAIA,SAAKP,MAAL,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCC,IAAhC,CAAqCY,OAArC,CAA6CF,OAA7C;;AACAG,IAAAA,UAAU,CAAC,EAAD,EAAK,EAAL,CAAV;AACA,SAAKC,YAAL,CAAkB,KAAKjB,MAAvB;AACD,GArCS;;AAsCVgB,EAAAA,UAAU,CAACE,aAAD,EAAgBC,WAAhB,EAA6B;AACrC,SAAKnB,MAAL,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCI,cAAhC,GAAiDY,aAAjD;AACA,SAAKlB,MAAL,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCK,cAAhC,GAAiDY,WAAjD;;AACA,SAAKV,aAAL,CAAmB,KAAKT,MAAxB;AACD,GA1CS;;AA2CVoB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,SAAKZ,aAAL,GAAqBY,QAArB;AACD;;AA7CS,CAAZ;AAgDAC,MAAM,CAACvB,KAAP,GAAeA,KAAf;AACA,eAAeA,KAAf","sourcesContent":["let store = {\r\n  _state: {\r\n    contain: {\r\n      advertising: {\r\n        news: [\r\n          {\r\n            header: \"bad news for gay\",\r\n            text: \"your ass in shit\",\r\n          },\r\n          {\r\n            header: \"bad news for gay\",\r\n            text: \"your ass in shit\",\r\n          },\r\n          {\r\n            header: \"bad news for gay\",\r\n            text: \"your ass in shit\",\r\n          },\r\n        ],\r\n        newsChangeHead: \"Введите название новости\",\r\n        newsChangeText: \"Введите текст новости\",\r\n      },\r\n    },\r\n  },\r\n  getState() {\r\n    return this._state;\r\n  },\r\n  _rerenderTree() {\r\n    console.log(\"state update\");\r\n  },\r\n  addNews() {\r\n    let newNews = {\r\n      header: this._state.ctain.advertising.newsChangeHead,\r\n      text: this._state.contain.advertising.newsChangeText,\r\n    };\r\n    this._state.contain.advertising.news.unshift(newNews);\r\n    updateNews(\"\", \"\");\r\n    this.rerenderTree(this._state);\r\n  },\r\n  updateNews(newHeaderNews, newTextNews) {\r\n    this._state.contain.advertising.newsChangeHead = newHeaderNews;\r\n    this._state.contain.advertising.newsChangeText = newTextNews;\r\n    this._rerenderTree(this._state);\r\n  },\r\n  subscribe(observer) {\r\n    this._rerenderTree = observer;\r\n  },\r\n};\r\n\r\nwindow.store = store;\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}