{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const {\n    loading,\n    setLoading\n  } = useState(false);\n  const {\n    error,\n    setError\n  } = useState(false);\n  const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Something wrong\");\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"g3rl9H4nEA3O7dIznuCFOat2bx0=\");","map":{"version":3,"sources":["D:/ХИМБОТ/reactbot/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","response","fetch","data","json","ok","Error","message","e","clearError"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMO,OAAO,GAAGN,WAAW,CACzB,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AACxDP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA;AAAhB,OAAN,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,iBAA1B,CAAN;AACD;;AAEDd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOU,IAAP;AACD,KAVD,CAUE,OAAOK,CAAP,EAAU;AACVf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACa,CAAC,CAACD,OAAH,CAAR;AACA,YAAMC,CAAN;AACD;AACF,GAlBwB,EAmBzB,EAnByB,CAA3B;;AAsBA,QAAMC,UAAU,GAAG,MAAMd,QAAQ,CAAC,IAAD,CAAjC;;AAEA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2Be,IAAAA;AAA3B,GAAP;AACD,CA5BM;;GAAMlB,O","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const { loading, setLoading } = useState(false);\r\n  const { error, setError } = useState(false);\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Something wrong\");\r\n        }\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => setError(null);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}